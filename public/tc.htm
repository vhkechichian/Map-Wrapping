<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <style type="text/css">
        #map {
            width: 312px;
            height: 312px;
            border: 1px solid gray;
        }
        .olControlAttribution { bottom: 0px!important }
    </style>

  	<script src="http://dev.openlayers.org/nightly/OpenLayers.js"></script>
    <script type="text/javascript">

        // make map available for easy debugging
        var map;

        // avoid pink tiles
        OpenLayers.IMAGE_RELOAD_ATTEMPTS = 3;
        OpenLayers.Util.onImageLoadErrorColor = "transparent";

        function init(){
            var options = {
                projection: new OpenLayers.Projection("EPSG:900913"),
                displayProjection: new OpenLayers.Projection("EPSG:4326"),
                units: "m",
                maxResolution: 156543.0339,
                maxExtent: new OpenLayers.Bounds(-20037508, -20037508,
                                                 20037508, 20037508.34)
            };
            map = new OpenLayers.Map('map', options);

            
            // create OSM layer
            // attribution: '<a href="http://www.openstreetmap.org/">OpenStreetMap</a>'
            var mapnik = new OpenLayers.Layer.TMS(
                "OpenStreetMap",
                "http://tile.openstreetmap.org/",
                {
                    type: 'png', getURL: osm_getTileURL,
                    displayOutsideMaxExtent: true
                }
            );
   
            
	var tc_layer = new OpenLayers.Layer.WMS("tc layer", "http://localhost:3000/cgi/tilecache/tilecache.cgi?",
	{layers: 'map_41', format: 'image/png'}, {'buffer':0})
	tc_layer.setIsBaseLayer(false);
	tc_layer.setVisibility(false);
	map.addLayer(tc_layer);
            // create a vector layer for drawing

            map.addLayers([mapnik]);
            map.addControl(new OpenLayers.Control.LayerSwitcher());
            map.addControl(new OpenLayers.Control.Permalink());
            map.addControl(new OpenLayers.Control.MousePosition());
            map.zoomToMaxExtent()
        }

        function osm_getTileURL(bounds) {
            var res = this.map.getResolution();
            var x = Math.round((bounds.left - this.maxExtent.left) / (res * this.tileSize.w));
            var y = Math.round((this.maxExtent.top - bounds.top) / (res * this.tileSize.h));
            var z = this.map.getZoom();
            var limit = Math.pow(2, z);

            if (y < 0 || y >= limit) {
                return OpenLayers.Util.getImagesLocation() + "404.png";
            } else {
                x = ((x % limit) + limit) % limit;
                return this.url + z + "/" + x + "/" + y + "." + this.type;
            }
        }

    </script>
  </head>
  <body onload="init()">

	<h1 id="title">OpenLayers Spherical Mercator Example</h1>

	<div id="tags">
	</div>

	<p id="shortdesc">
		Shows the use of the Spherical Mercator Layers, for overlaying 
        Google, Yahoo, Microsoft, and other layers with WMS and TMS tiles.
    </p>
	<div id="map"></div>

	<div id="docs">
	</div>
  </body>
</html>




